/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V2TemplateRenderQueryAsSubResourceAttributes } from './V2TemplateRenderQueryAsSubResourceAttributes';
import {
    V2TemplateRenderQueryAsSubResourceAttributesFromJSON,
    V2TemplateRenderQueryAsSubResourceAttributesFromJSONTyped,
    V2TemplateRenderQueryAsSubResourceAttributesToJSON,
} from './V2TemplateRenderQueryAsSubResourceAttributes';

/**
 * 
 * @export
 * @interface V2TemplateRenderQueryAsSubResource
 */
export interface V2TemplateRenderQueryAsSubResource {
    /**
     * 
     * @type {string}
     * @memberof V2TemplateRenderQueryAsSubResource
     */
    type: V2TemplateRenderQueryAsSubResourceTypeEnum;
    /**
     * 
     * @type {V2TemplateRenderQueryAsSubResourceAttributes}
     * @memberof V2TemplateRenderQueryAsSubResource
     */
    attributes: V2TemplateRenderQueryAsSubResourceAttributes;
}


/**
 * @export
 */
export const V2TemplateRenderQueryAsSubResourceTypeEnum = {
    Template: 'template'
} as const;
export type V2TemplateRenderQueryAsSubResourceTypeEnum = typeof V2TemplateRenderQueryAsSubResourceTypeEnum[keyof typeof V2TemplateRenderQueryAsSubResourceTypeEnum];


/**
 * Check if a given object implements the V2TemplateRenderQueryAsSubResource interface.
 */
export function instanceOfV2TemplateRenderQueryAsSubResource(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "attributes" in value;

    return isInstance;
}

export function V2TemplateRenderQueryAsSubResourceFromJSON(json: any): V2TemplateRenderQueryAsSubResource {
    return V2TemplateRenderQueryAsSubResourceFromJSONTyped(json, false);
}

export function V2TemplateRenderQueryAsSubResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): V2TemplateRenderQueryAsSubResource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'attributes': V2TemplateRenderQueryAsSubResourceAttributesFromJSON(json['attributes']),
    };
}

export function V2TemplateRenderQueryAsSubResourceToJSON(value?: V2TemplateRenderQueryAsSubResource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'attributes': V2TemplateRenderQueryAsSubResourceAttributesToJSON(value.attributes),
    };
}


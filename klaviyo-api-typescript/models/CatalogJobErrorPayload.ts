/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorSource } from './ErrorSource';
import {
    ErrorSourceFromJSON,
    ErrorSourceFromJSONTyped,
    ErrorSourceToJSON,
} from './ErrorSource';

/**
 * 
 * @export
 * @interface CatalogJobErrorPayload
 */
export interface CatalogJobErrorPayload {
    /**
     * 
     * @type {string}
     * @memberof CatalogJobErrorPayload
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogJobErrorPayload
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogJobErrorPayload
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogJobErrorPayload
     */
    detail: string;
    /**
     * 
     * @type {ErrorSource}
     * @memberof CatalogJobErrorPayload
     */
    source: ErrorSource;
}

/**
 * Check if a given object implements the CatalogJobErrorPayload interface.
 */
export function instanceOfCatalogJobErrorPayload(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "detail" in value;
    isInstance = isInstance && "source" in value;

    return isInstance;
}

export function CatalogJobErrorPayloadFromJSON(json: any): CatalogJobErrorPayload {
    return CatalogJobErrorPayloadFromJSONTyped(json, false);
}

export function CatalogJobErrorPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogJobErrorPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'code': json['code'],
        'title': json['title'],
        'detail': json['detail'],
        'source': ErrorSourceFromJSON(json['source']),
    };
}

export function CatalogJobErrorPayloadToJSON(value?: CatalogJobErrorPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'title': value.title,
        'detail': value.detail,
        'source': ErrorSourceToJSON(value.source),
    };
}


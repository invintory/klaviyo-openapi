/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetCatalogItemCategoryListResponseCollectionDataInner } from './GetCatalogItemCategoryListResponseCollectionDataInner';
import {
    GetCatalogItemCategoryListResponseCollectionDataInnerFromJSON,
    GetCatalogItemCategoryListResponseCollectionDataInnerFromJSONTyped,
    GetCatalogItemCategoryListResponseCollectionDataInnerToJSON,
} from './GetCatalogItemCategoryListResponseCollectionDataInner';

/**
 * 
 * @export
 * @interface CatalogItemCategoryOp
 */
export interface CatalogItemCategoryOp {
    /**
     * 
     * @type {Array<GetCatalogItemCategoryListResponseCollectionDataInner>}
     * @memberof CatalogItemCategoryOp
     */
    data: Array<GetCatalogItemCategoryListResponseCollectionDataInner>;
}

/**
 * Check if a given object implements the CatalogItemCategoryOp interface.
 */
export function instanceOfCatalogItemCategoryOp(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function CatalogItemCategoryOpFromJSON(json: any): CatalogItemCategoryOp {
    return CatalogItemCategoryOpFromJSONTyped(json, false);
}

export function CatalogItemCategoryOpFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogItemCategoryOp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(GetCatalogItemCategoryListResponseCollectionDataInnerFromJSON)),
    };
}

export function CatalogItemCategoryOpToJSON(value?: CatalogItemCategoryOp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(GetCatalogItemCategoryListResponseCollectionDataInnerToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailMessageContent
 */
export interface EmailMessageContent {
    /**
     * 
     * @type {string}
     * @memberof EmailMessageContent
     */
    subject: string;
    /**
     * 
     * @type {string}
     * @memberof EmailMessageContent
     */
    previewText: string;
    /**
     * 
     * @type {string}
     * @memberof EmailMessageContent
     */
    fromEmail: string;
    /**
     * 
     * @type {string}
     * @memberof EmailMessageContent
     */
    fromName: string;
}

/**
 * Check if a given object implements the EmailMessageContent interface.
 */
export function instanceOfEmailMessageContent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "subject" in value;
    isInstance = isInstance && "previewText" in value;
    isInstance = isInstance && "fromEmail" in value;
    isInstance = isInstance && "fromName" in value;

    return isInstance;
}

export function EmailMessageContentFromJSON(json: any): EmailMessageContent {
    return EmailMessageContentFromJSONTyped(json, false);
}

export function EmailMessageContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailMessageContent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'subject': json['subject'],
        'previewText': json['preview_text'],
        'fromEmail': json['from_email'],
        'fromName': json['from_name'],
    };
}

export function EmailMessageContentToJSON(value?: EmailMessageContent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'subject': value.subject,
        'preview_text': value.previewText,
        'from_email': value.fromEmail,
        'from_name': value.fromName,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CatalogCategoryUpdateQueryAsSubResourceAttributes } from './CatalogCategoryUpdateQueryAsSubResourceAttributes';
import {
    CatalogCategoryUpdateQueryAsSubResourceAttributesFromJSON,
    CatalogCategoryUpdateQueryAsSubResourceAttributesFromJSONTyped,
    CatalogCategoryUpdateQueryAsSubResourceAttributesToJSON,
} from './CatalogCategoryUpdateQueryAsSubResourceAttributes';
import type { GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationships } from './GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationships';
import {
    GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationshipsFromJSON,
    GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationshipsFromJSONTyped,
    GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationshipsToJSON,
} from './GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationships';

/**
 * 
 * @export
 * @interface CatalogCategoryUpdateQueryAsSubResource
 */
export interface CatalogCategoryUpdateQueryAsSubResource {
    /**
     * 
     * @type {string}
     * @memberof CatalogCategoryUpdateQueryAsSubResource
     */
    type: CatalogCategoryUpdateQueryAsSubResourceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CatalogCategoryUpdateQueryAsSubResource
     */
    id: string;
    /**
     * 
     * @type {CatalogCategoryUpdateQueryAsSubResourceAttributes}
     * @memberof CatalogCategoryUpdateQueryAsSubResource
     */
    attributes: CatalogCategoryUpdateQueryAsSubResourceAttributes;
    /**
     * 
     * @type {GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationships}
     * @memberof CatalogCategoryUpdateQueryAsSubResource
     */
    relationships?: GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationships;
}


/**
 * @export
 */
export const CatalogCategoryUpdateQueryAsSubResourceTypeEnum = {
    CatalogCategory: 'catalog-category'
} as const;
export type CatalogCategoryUpdateQueryAsSubResourceTypeEnum = typeof CatalogCategoryUpdateQueryAsSubResourceTypeEnum[keyof typeof CatalogCategoryUpdateQueryAsSubResourceTypeEnum];


/**
 * Check if a given object implements the CatalogCategoryUpdateQueryAsSubResource interface.
 */
export function instanceOfCatalogCategoryUpdateQueryAsSubResource(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "attributes" in value;

    return isInstance;
}

export function CatalogCategoryUpdateQueryAsSubResourceFromJSON(json: any): CatalogCategoryUpdateQueryAsSubResource {
    return CatalogCategoryUpdateQueryAsSubResourceFromJSONTyped(json, false);
}

export function CatalogCategoryUpdateQueryAsSubResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogCategoryUpdateQueryAsSubResource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'attributes': CatalogCategoryUpdateQueryAsSubResourceAttributesFromJSON(json['attributes']),
        'relationships': !exists(json, 'relationships') ? undefined : GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationshipsFromJSON(json['relationships']),
    };
}

export function CatalogCategoryUpdateQueryAsSubResourceToJSON(value?: CatalogCategoryUpdateQueryAsSubResource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'id': value.id,
        'attributes': CatalogCategoryUpdateQueryAsSubResourceAttributesToJSON(value.attributes),
        'relationships': GetCatalogItemCreateJobResponseCollectionWithIncludedSectionDataInnerRelationshipsToJSON(value.relationships),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * The version of the OpenAPI document: 2022-10-17
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TagCreateQueryAsSubResourceAttributes } from './TagCreateQueryAsSubResourceAttributes';
import {
    TagCreateQueryAsSubResourceAttributesFromJSON,
    TagCreateQueryAsSubResourceAttributesFromJSONTyped,
    TagCreateQueryAsSubResourceAttributesToJSON,
} from './TagCreateQueryAsSubResourceAttributes';

/**
 * 
 * @export
 * @interface TagCreateQueryAsSubResource
 */
export interface TagCreateQueryAsSubResource {
    /**
     * 
     * @type {string}
     * @memberof TagCreateQueryAsSubResource
     */
    type: TagCreateQueryAsSubResourceTypeEnum;
    /**
     * 
     * @type {TagCreateQueryAsSubResourceAttributes}
     * @memberof TagCreateQueryAsSubResource
     */
    attributes: TagCreateQueryAsSubResourceAttributes;
}


/**
 * @export
 */
export const TagCreateQueryAsSubResourceTypeEnum = {
    Tag: 'tag'
} as const;
export type TagCreateQueryAsSubResourceTypeEnum = typeof TagCreateQueryAsSubResourceTypeEnum[keyof typeof TagCreateQueryAsSubResourceTypeEnum];


/**
 * Check if a given object implements the TagCreateQueryAsSubResource interface.
 */
export function instanceOfTagCreateQueryAsSubResource(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "attributes" in value;

    return isInstance;
}

export function TagCreateQueryAsSubResourceFromJSON(json: any): TagCreateQueryAsSubResource {
    return TagCreateQueryAsSubResourceFromJSONTyped(json, false);
}

export function TagCreateQueryAsSubResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagCreateQueryAsSubResource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'attributes': TagCreateQueryAsSubResourceAttributesFromJSON(json['attributes']),
    };
}

export function TagCreateQueryAsSubResourceToJSON(value?: TagCreateQueryAsSubResource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'attributes': TagCreateQueryAsSubResourceAttributesToJSON(value.attributes),
    };
}

